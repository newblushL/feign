spring.application.name=feign-eureka-demo
server.port=8082
# 当注册中心由多个节点，用逗号分开
eureka.client.service-url.defaultZone=http://ll:123456@127.0.0.1:8761/eureka
# 采用IP注册
eureka.instance.prefer-ip-address=true
# 定义实例ID格式
eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
# 自定义实例跳转链接
eureka.instance.status-page-url=http://www.baidu.com
# 移除失效的服务信息
eureka.client.healthcheck.enabled=true
# 默认90秒，表示Eureka Sever至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没有收到下一次的心跳，则移除该Instance
eureka.instance.lease-expiration-duration-in-seconds=5
# 默认30秒，表示Eureka Client发送心跳给server端的频率
eureka.instance.lease-renewal-interval-in-seconds=5

# 开启Eurake
ribbon.eureka.enabled=true

# Client日志级别
logging.level.com.example.feign.client.UserRemoteClient=DEBUG

# feign禁用HttpClient，启用OkHttp
feign.httpclient.enabled=false
feign.okhttp.enabled=true

# GZIP压缩配置，节约网络资源，提升接口性能，只有当Feign的Http Client不是OkHttp3的时候，压缩才会生效
feign.compression.request.enabled=true
feign.compression.response.enabled=true
# 配置压缩的类型，最小压缩值的标准
feign.compression.request.mime-types=text/html,application/xml,application/json
feign.compression.request.min-request-size=2048
# 自定义Feign配置
feign.client.default-config=my-config
# 链接超时时间
feign.client.config.my-config.connect-timeout=5000
# 读取超时时间
feign.client.config.my-config.read-timeout=5000
# 日志等级
feign.client.config.my-config.logger-level=full

